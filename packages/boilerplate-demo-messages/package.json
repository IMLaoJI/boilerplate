{
  "name": "@effect-ts-app/boilerplate-demo-messages",
  "version": "0.5.0",
  "license": "MIT",
  "type": "module",
  "resolutions": {
    "typescript": "https://cdn.jsdelivr.net/npm/@tsplus/installer@0.0.159/compiler/typescript.tgz"
  },
  "peerDependencies": {},
  "dependencies": {
    "@effect-ts-app/core": "^1.2.6",
    "@effect-ts-app/infra": "^1.2.6",
    "@effect-ts-app/schema": "^1.2.6",
    "@effect-ts-app/boilerplate-infra": "*",
    "@effect-ts-app/boilerplate-prelude": "*",
    "@effect-ts-app/boilerplate-demo-types": "*",
    "change-case": "^4.1.2",
    "cross-fetch": "^3.1.5",
    "dotenv": "^16.0.3",
    "path-parser": "^6.1.0"
  },
  "exports": {
    ".": {
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      },
      "require": {
        "types": "./dist/index.d.ts",
        "default": "./_cjs/index.cjs"
      }
    },
    "./Messages/PrintQueue/PrintOnePick": {
      "import": {
        "types": "./dist/Messages/PrintQueue/PrintOnePick.d.ts",
        "default": "./dist/Messages/PrintQueue/PrintOnePick.js"
      },
      "require": {
        "types": "./dist/Messages/PrintQueue/PrintOnePick.d.ts",
        "default": "./_cjs/Messages/PrintQueue/PrintOnePick.cjs"
      }
    },
    "./RequestLayers": {
      "import": {
        "types": "./dist/RequestLayers.d.ts",
        "default": "./dist/RequestLayers.js"
      },
      "require": {
        "types": "./dist/RequestLayers.d.ts",
        "default": "./_cjs/RequestLayers.cjs"
      }
    },
    "./*.js": {
      "import": {
        "types": "./dist/*.d.ts",
        "default": "./dist/*.js"
      },
      "require": {
        "types": "./dist/*.d.ts",
        "default": "./_cjs/*.cjs"
      }
    },
    "./*": {
      "import": {
        "types": "./dist/*.d.ts",
        "default": "./dist/*.js"
      },
      "require": {
        "types": "./dist/*.d.ts",
        "default": "./_cjs/*.cjs"
      }
    }
  },
  "scripts": {
    "build": "pnpm clean-dist && NODE_OPTIONS=--max-old-space-size=6144 tsc --build",
    "build2:cjs": "rm -rf _cjs && babel dist --config-file ../../.babel.cjs.json --out-dir _cjs --out-file-extension .cjs --source-maps",
    "watch": "pnpm build --watch",
    "watch2": "pnpm clean-dist && NODE_OPTIONS=--max-old-space-size=6144 tsc -w",
    "clean": "rm -rf dist && rm -rf _cjs",
    "clean-dist": "sh ../../scripts/clean-dist.sh",
    "circular": "madge --circular --ts-config ./tsconfig.json --extensions ts ./_src",
    "circular:dist": "madge --circular --extensions js ./dist",
    "compile": "NODE_OPTIONS=--max-old-space-size=6144 tsc --noEmit",
    "lint": "NODE_OPTIONS=--max-old-space-size=6144 ESLINT_TS=1 eslint .",
    "lint:watch": "ESLINT_TS=1 esw -w --changed --clear --ext ts,tsx .",
    "prettier": "prettier \"**/*.ts\"",
    "autofix": "pnpm lint --fix",
    "test": "TEST_COMPILED=1 vitest",
    "testsuite": "pnpm lint && pnpm run test --passWithNoTests && pnpm circular && pnpm circular:dist",
    "client": "node --experimental-specifier-resolution=node -r source-map-support/register ./dist/client.bin.js",
    "ncu": "ncu -x date-fns"
  },
  "gitHead": "bd8e27eea3eff97db8739d577d67e7336c078d28",
  "sideEffects": false
}